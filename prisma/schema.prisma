// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum Dormitory {
  MALE
  FEMALE
  NOT_DORMITORY
}

enum Gender {
  MALE
  FEMALE
}

model Node {
  id Int @id @default(autoincrement())
  name String
  latitude Float
  longitude Float
  buildingId Int?
  
  edges1 Edge[] @relation("EdgeToNode1")
  edges2 Edge[] @relation("EdgeToNode2")
  building Building? @relation(fields: [buildingId], references: [id])



  @@map("node")
}

model Edge {
  id Int @id @default(autoincrement())
  nodeId1 Int
  nodeId2 Int
  isFreeOfRain Boolean  @map("is_free_of_rain")
  distance Float
  beamWeight Float
  inDormitory Dormitory @default(NOT_DORMITORY)
  
  node1 Node @relation("EdgeToNode1", fields: [nodeId1], references: [id])
  node2 Node @relation("EdgeToNode2", fields: [nodeId2], references: [id])
  @@map("edge")
}

model Building {
  id Int @id @default(autoincrement())
  name String
  imageUrls String[]
  importance Int
  latitude Float
  longitude Float
  alias String[]

  nodes Node[]
  buildingCategories BuildingCategory[]
  @@map("building")
}

model BuildingCategory {
  id Int @id @default(autoincrement())
  categoryId Int
  buildingId Int
  category Category @relation(fields: [categoryId], references: [id])
  building Building @relation(fields: [buildingId], references: [id])
  @@map("building_category")
}


model Category {
  id Int @id @default(autoincrement())
  name String
 
  buildingCategories BuildingCategory[]
  @@map("category")
}

model Report {
  id Int @id @default(autoincrement())
  imageUrls String[]
  title String
  description String
  phoneNumber String?
  email String?
  reportStatus ReportStatus @default(PENDING)
  @@map("report")
}

enum ReportStatus {
  PENDING
  APPROVED
  REJECTED
}



